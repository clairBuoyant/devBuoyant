version: "3.8"
services:
  nginx:
    container_name: devbuoyant-nginx
    image: nginx
    volumes:
      - ./server/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "${WEB_PORT:-8000}:80"
    depends_on:
      - backend
      - pgadmin
      - web

  redis:
    container_name: devbuoyant-redis
    image: redis
    ports:
      - 6379:6379

  postgres:
    container_name: devbuoyant-postgres
    image: postgis/postgis
    restart: always
    environment:
      POSTGRES_USER: ${postgres_user:-postgres}
      POSTGRES_PASSWORD: ${postgres_password:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - ./scripts/load_geodata.sh:/db_scripts/load_geodata.sh/:cached # TODO: move script to server process
      - db-data:/var/lib/postgresql/data:cached

  pgadmin:
    container_name: devbuoyant-pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgdev@clairbuoyant.live}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-5050}:80"

  backend:
    container_name: devbuoyant-backend
    build:
      context: server
      dockerfile: Dockerfile
      target: development
    command: python server/main.py
    tty: true
    volumes:
      - .:/backend/server:cached
      - ./.docker/.ipython:/.ipython:cached
    environment:
      DATABASE_URL: "postgresql+asyncpg://${postgres_user:-postgres}:${postgres_password:-postgres}@postgres:5432/${postgres_user:-postgres}"
      PYTHON_ENV: development
      PYTHONPATH: $PYTHONPATH:.
    depends_on:
      - "postgres"

  web:
    container_name: devbuoyant-web
    build:
      context: web
      dockerfile: Dockerfile
    stdin_open: true
    volumes:
      - ./web:/web:cached
      - ./web/node_modules:/web/node_modules:cached
    environment:
      - NODE_ENV=development

volumes:
  db-data:
